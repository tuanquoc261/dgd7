<?php

/**
 * @file
 * Helps site builders and module developers investigate a site.
 */

/**
 * Implements hook_form_alter() to show each form's identifier.
 */
function xray_form_alter(&$form, &$form_state, $form_id) {
  $form['xray_display_form_id'] = array(
      '#type' => 'item',
      '#title' => t('Form ID'),
      '#markup' => $form_id,
      '#weight' => -100,
  );
}

/**
 * Implement hook_help().
 */
function xray_help($path, $arg) {
  if ($path == 'admin/structure') {
    return t('This site is stuff!');
  }
}

/**
 * Implemnent hook_menu().
 */
function xray_menu(){
  $items['admin/reports/xray'] = array(
    'title' => 'X-ray technical site overview',
    'description' => 'See the internal structure of the site',
    'page callback' => 'xray_overview_page',
    'access callback' => TRUE,
  );
  
  $items['admin/reports/xray/overview'] = array(
    'title' => 'Overview',
    'description' => "Technical overview of the sites's internals.",
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  return $items;
}

/**
 * Fetch information about themes.
 */
function xray_stats_enabled_themes() {
  $themes = list_themes();
  $num_themes = count($themes);
// Initialize variables for the data you will collect.
  $num_hidden = 0; // Number of hidden themes.
  $num_enabled = 0;
  $summaries = array();
// Iterate through each theme, gathering data that you care about.
  foreach ($themes as $themename => $theme) {
// Do not gather statistics for hidden themes, but keep a count of them.
    if (isset($theme->info['hidden']) && $theme->info['hidden']) {
      $num_hidden++;
    } else { // This is a visible theme.
      if ($theme->status) {
        $num_enabled++;
// This is an enabled theme, provide more stats.
        $summaries[$theme->info['name']] = array(
        'regions' => count($theme->info['regions']),
//        'overlay_regions' => count($theme->info['overlay_regions']),
        'regions_hidden' => count($theme->info['regions_hidden']),
        'features' => count($theme->info['features']),
        'kindsofstylesheets' => count($theme->info['stylesheets']),
        'allstylesheets' => isset($theme->info['stylesheets']['all']) ? count($theme->info['stylesheets']['all']) : 0,
        );
      }
    }
  }
  return compact('num_themes', 'num_hidden', 'num_enabled', 'summaries');
}
